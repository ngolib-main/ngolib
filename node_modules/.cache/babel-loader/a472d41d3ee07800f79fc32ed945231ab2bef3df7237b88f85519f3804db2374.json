{"ast":null,"code":"import*as React from'react';import{useEffect,useState}from\"react\";import\"../../style/page/userForms.css\";import\"../../style/reusable/toggle.css\";import Header from\"../reusable/Header\";import{useSearchParams,useNavigate}from\"react-router-dom\";// Assuming you place the toggle styles here\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function ResetPassword(){const[searchParams]=useSearchParams();const navigate=useNavigate();const token=searchParams.get('token');const[userId,setUserId]=useState(null);const[email,setEmail]=useState(\"\");const[password,setPassword]=useState(\"\");const[password_rep,setPasswordRep]=useState(\"\");const[message,setMessage]=useState(\"\");const[isLoading,setIsLoading]=useState(true);const[error,setError]=useState(null);const handleSearchEmail=async token=>{try{const response=await fetch('/api/auth/find-user',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({token:token})});if(!response.ok){const errorData=await response.json();throw new Error(errorData.message||'Failed to validate token');alert(error);}const data=await response.json();// Now data should contain user_id and email from the backend\nreturn{userId:data.user_id,email:data.email};}catch(error){console.error('Error finding user by token:',error);// alert(error);\n//navigate('/forgot');\nthrow error;// Re-throw to handle in the component\n}};useEffect(()=>{// Function to be executed on page load\nconst validateToken=async()=>{if(!token){setError('No reset token provided');setIsLoading(false);return;}try{setIsLoading(true);const userData=await handleSearchEmail(token);setUserId(userData.userId);//console.log(userData);\n//console.log(\"This is the user id:\")\n//console.log(userId);\nsetEmail(userData.email);}catch(error){alert('Invalid or expired token \\nYou will be redirected to the Forgot Password page.');navigate('/forgot');}finally{setIsLoading(false);}};validateToken();},[]);// Empty dependency array means this runs once on mount\nconst handleSubmit=async e=>{e.preventDefault();setMessage(\"Updating password...\");try{console.log(\"⚡ Sending request...\");const response=await fetch(\"/api/auth/reset-password\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({userId,password:password,password_rep:password_rep})});console.log(\"Response Status:\",response.status);console.log(\"Response OK:\",response.ok);const data=await response.json();if(response.ok){console.log(\"Response Data:\",data);// Log the response body\nsetMessage(\"\\u2705 Success: \".concat(data.message));// Display success message\n}else{console.log(\"Response Data:\",data);// Log the response body\nsetMessage(\"\\u274C Error: \".concat(data.message||\"Unknown error occurred\"));// Handle server error\n}}catch(error){console.error(\"Signup Error:\",error);setMessage(\"\\u274C Error: \".concat(error.message));// Ensure React updates the UI by wrapping setMessage in a useEffect trigger\nsetTimeout(()=>{setMessage(\"\\u274C Error: \".concat(error.message));},0);alert(\"Error: \".concat(error.message));// Alert popup\n}};return/*#__PURE__*/_jsxs(\"div\",{className:\"outerContainer\",children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"formComponent\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Reset account password\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"userForm\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"email\",name:\"email\",id:\"email\",value:email,placeholder:\"Email\",required:true,readOnly:true,onInput:e=>setEmail(e.target.value)}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",name:\"password\",id:\"password\",value:password,placeholder:\"Password\",required:true,onInput:e=>setPassword(e.target.value)}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",name:\"password_rep\",id:\"password_rep\",value:password_rep,placeholder:\"Repeat password\",required:true,onInput:e=>setPasswordRep(e.target.value)}),/*#__PURE__*/_jsx(\"input\",{type:\"submit\",value:\"Reset Password\"})]}),message&&/*#__PURE__*/_jsx(\"p\",{children:message}),\" \",/*#__PURE__*/_jsx(\"a\",{href:\"/login\",children:\"Log in\"})]})]});}export default ResetPassword;","map":{"version":3,"names":["React","useEffect","useState","Header","useSearchParams","useNavigate","jsx","_jsx","jsxs","_jsxs","ResetPassword","searchParams","navigate","token","get","userId","setUserId","email","setEmail","password","setPassword","password_rep","setPasswordRep","message","setMessage","isLoading","setIsLoading","error","setError","handleSearchEmail","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","Error","alert","data","user_id","console","validateToken","userData","handleSubmit","e","preventDefault","log","status","concat","setTimeout","className","children","onSubmit","type","name","id","value","placeholder","required","readOnly","onInput","target","href"],"sources":["/home/javi/Server/src/components/reset/ResetPassword.js"],"sourcesContent":["import * as React from 'react';\r\nimport {useEffect, useState} from \"react\";\r\nimport \"../../style/page/userForms.css\";\r\nimport \"../../style/reusable/toggle.css\";\r\nimport Header from \"../reusable/Header\";\r\nimport {useSearchParams, useNavigate} from \"react-router-dom\"; // Assuming you place the toggle styles here\r\n\r\nfunction ResetPassword(){\r\n    const [searchParams] = useSearchParams();\r\n    const navigate = useNavigate();\r\n    const token = searchParams.get('token');\r\n    const [userId, setUserId] = useState(null);\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [password_rep, setPasswordRep] = useState(\"\");\r\n    const [message, setMessage] = useState(\"\");\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    const handleSearchEmail = async (token) => {\r\n        try {\r\n            const response = await fetch('/api/auth/find-user', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ token: token }),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                const errorData = await response.json();\r\n                throw new Error(errorData.message || 'Failed to validate token');\r\n                alert(error)\r\n            }\r\n\r\n            const data = await response.json();\r\n            // Now data should contain user_id and email from the backend\r\n            return {\r\n                userId: data.user_id,\r\n                email: data.email\r\n            };\r\n        } catch (error) {\r\n            console.error('Error finding user by token:', error);\r\n           // alert(error);\r\n            //navigate('/forgot');\r\n            throw error; // Re-throw to handle in the component\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        // Function to be executed on page load\r\n        const validateToken = async () => {\r\n            if (!token) {\r\n                setError('No reset token provided');\r\n                setIsLoading(false);\r\n                return;\r\n            }\r\n\r\n            try {\r\n                setIsLoading(true);\r\n                const userData = await handleSearchEmail(token);\r\n                setUserId(userData.userId);\r\n                //console.log(userData);\r\n                //console.log(\"This is the user id:\")\r\n                //console.log(userId);\r\n                setEmail(userData.email);\r\n            } catch (error) {\r\n                alert('Invalid or expired token \\nYou will be redirected to the Forgot Password page.');\r\n                navigate('/forgot');\r\n            } finally {\r\n                setIsLoading(false);\r\n            }\r\n        };\r\n\r\n        validateToken();\r\n    }, []); // Empty dependency array means this runs once on mount\r\n\r\n\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setMessage(\"Updating password...\");\r\n\r\n        try {\r\n            console.log(\"⚡ Sending request...\");\r\n\r\n            const response = await fetch(\"/api/auth/reset-password\", {\r\n                method: \"POST\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify({userId, password:password, password_rep:password_rep}),\r\n            })\r\n\r\n            console.log(\"Response Status:\", response.status);\r\n\r\n            console.log(\"Response OK:\", response.ok);\r\n            const data = await response.json();\r\n\r\n            if (response.ok) {\r\n                console.log(\"Response Data:\", data); // Log the response body\r\n                setMessage(`✅ Success: ${data.message}`); // Display success message\r\n            } else {\r\n                console.log(\"Response Data:\", data); // Log the response body\r\n                setMessage(`❌ Error: ${data.message || \"Unknown error occurred\"}`); // Handle server error\r\n            }\r\n\r\n        } catch (error) {\r\n            console.error(\"Signup Error:\", error);\r\n            setMessage(`❌ Error: ${error.message}`);\r\n            // Ensure React updates the UI by wrapping setMessage in a useEffect trigger\r\n            setTimeout(() => {\r\n                setMessage(`❌ Error: ${error.message}`);\r\n            }, 0);\r\n            alert(`Error: ${error.message}`);  // Alert popup\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div className={\"outerContainer\"}>\r\n            <Header />\r\n            <div className=\"formComponent\">\r\n                <h3>Reset account password</h3>\r\n                <form onSubmit={handleSubmit} className=\"userForm\">\r\n\r\n                    <input\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        id=\"email\"\r\n                        value={email}\r\n                        placeholder=\"Email\"\r\n                        required\r\n                        readOnly\r\n                        onInput={(e => setEmail(e.target.value))}\r\n                    />\r\n                    <input\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        id=\"password\"\r\n                        value={password}\r\n                        placeholder=\"Password\"\r\n                        required\r\n                        onInput={(e => setPassword(e.target.value))}\r\n                    />\r\n                    <input\r\n                        type=\"password\"\r\n                        name=\"password_rep\"\r\n                        id=\"password_rep\"\r\n                        value={password_rep}\r\n                        placeholder=\"Repeat password\"\r\n                        required\r\n                        onInput={(e => setPasswordRep(e.target.value))}\r\n                    />\r\n\r\n                  <input type=\"submit\" value=\"Reset Password\"/>\r\n                </form>\r\n                {message && <p>{message}</p>} {/* Show the message */}\r\n                <a href=\"/login\">Log in</a>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ResetPassword;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}