{"ast":null,"code":"var _jsxFileName = \"/home/javi/Server/src/components/reset/ResetPassword.js\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport { useEffect, useState } from \"react\";\nimport \"../../style/page/userForms.css\";\nimport \"../../style/reusable/toggle.css\";\nimport Header from \"../reusable/Header\";\nimport { useSearchParams, useNavigate } from \"react-router-dom\"; // Assuming you place the toggle styles here\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ResetPassword() {\n  _s();\n  const [searchParams] = useSearchParams();\n  const navigate = useNavigate();\n  const token = searchParams.get('token');\n  const [userId, setUserId] = useState(null);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [password_rep, setPasswordRep] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const handleSearchEmail = async token => {\n    try {\n      const response = await fetch('/api/auth/find-user', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          token: token\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'Failed to validate token');\n        alert(error);\n      }\n      const data = await response.json();\n      // Now data should contain user_id and email from the backend\n      return {\n        userId: data.user_id,\n        email: data.email\n      };\n    } catch (error) {\n      console.error('Error finding user by token:', error);\n      // alert(error);\n      //navigate('/forgot');\n      throw error; // Re-throw to handle in the component\n    }\n  };\n  useEffect(() => {\n    // Function to be executed on page load\n    const validateToken = async () => {\n      if (!token) {\n        setError('No reset token provided');\n        setIsLoading(false);\n        return;\n      }\n      try {\n        setIsLoading(true);\n        const userData = await handleSearchEmail(token);\n        setUserId(userData.userId);\n        //console.log(userData);\n        //console.log(\"This is the user id:\")\n        //console.log(userId);\n        setEmail(userData.email);\n      } catch (error) {\n        alert('Invalid or expired token \\nYou will be redirected to the Forgot Password page.');\n        navigate('/forgot');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    validateToken();\n  }, []); // Empty dependency array means this runs once on mount\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setMessage(\"Updating password...\");\n    try {\n      console.log(\"⚡ Sending request...\");\n      const response = await fetch(\"/api/auth/reset-password\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          userId,\n          password: password,\n          password_rep: password_rep\n        })\n      });\n      console.log(\"Response Status:\", response.status);\n      console.log(\"Response OK:\", response.ok);\n      const data = await response.json();\n      if (response.ok) {\n        console.log(\"Response Data:\", data); // Log the response body\n        setMessage(`✅ Success: ${data.message}`); // Display success message\n      } else {\n        console.log(\"Response Data:\", data); // Log the response body\n        setMessage(`❌ Error: ${data.message || \"Unknown error occurred\"}`); // Handle server error\n      }\n    } catch (error) {\n      console.error(\"Signup Error:\", error);\n      setMessage(`❌ Error: ${error.message}`);\n      // Ensure React updates the UI by wrapping setMessage in a useEffect trigger\n      setTimeout(() => {\n        setMessage(`❌ Error: ${error.message}`);\n      }, 0);\n      alert(`Error: ${error.message}`); // Alert popup\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"outerContainer\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"formComponent\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Reset account password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"userForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          id: \"email\",\n          value: email,\n          placeholder: \"Email\",\n          required: true,\n          readOnly: true,\n          onInput: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          id: \"password\",\n          value: password,\n          placeholder: \"Password\",\n          required: true,\n          onInput: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password_rep\",\n          id: \"password_rep\",\n          value: password_rep,\n          placeholder: \"Repeat password\",\n          required: true,\n          onInput: e => setPasswordRep(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Reset Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 29\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/login\",\n        children: \"Log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 9\n  }, this);\n}\n_s(ResetPassword, \"qsdA2bqmFeNVzTDvoEoQ2x9KFyk=\", false, function () {\n  return [useSearchParams, useNavigate];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useEffect","useState","Header","useSearchParams","useNavigate","jsxDEV","_jsxDEV","ResetPassword","_s","searchParams","navigate","token","get","userId","setUserId","email","setEmail","password","setPassword","password_rep","setPasswordRep","message","setMessage","isLoading","setIsLoading","error","setError","handleSearchEmail","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","Error","alert","data","user_id","console","validateToken","userData","handleSubmit","e","preventDefault","log","status","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","name","id","value","placeholder","required","readOnly","onInput","target","href","_c","$RefreshReg$"],"sources":["/home/javi/Server/src/components/reset/ResetPassword.js"],"sourcesContent":["import * as React from 'react';\r\nimport {useEffect, useState} from \"react\";\r\nimport \"../../style/page/userForms.css\";\r\nimport \"../../style/reusable/toggle.css\";\r\nimport Header from \"../reusable/Header\";\r\nimport {useSearchParams, useNavigate} from \"react-router-dom\"; // Assuming you place the toggle styles here\r\n\r\nfunction ResetPassword(){\r\n    const [searchParams] = useSearchParams();\r\n    const navigate = useNavigate();\r\n    const token = searchParams.get('token');\r\n    const [userId, setUserId] = useState(null);\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [password_rep, setPasswordRep] = useState(\"\");\r\n    const [message, setMessage] = useState(\"\");\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    const handleSearchEmail = async (token) => {\r\n        try {\r\n            const response = await fetch('/api/auth/find-user', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ token: token }),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                const errorData = await response.json();\r\n                throw new Error(errorData.message || 'Failed to validate token');\r\n                alert(error)\r\n            }\r\n\r\n            const data = await response.json();\r\n            // Now data should contain user_id and email from the backend\r\n            return {\r\n                userId: data.user_id,\r\n                email: data.email\r\n            };\r\n        } catch (error) {\r\n            console.error('Error finding user by token:', error);\r\n           // alert(error);\r\n            //navigate('/forgot');\r\n            throw error; // Re-throw to handle in the component\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        // Function to be executed on page load\r\n        const validateToken = async () => {\r\n            if (!token) {\r\n                setError('No reset token provided');\r\n                setIsLoading(false);\r\n                return;\r\n            }\r\n\r\n            try {\r\n                setIsLoading(true);\r\n                const userData = await handleSearchEmail(token);\r\n                setUserId(userData.userId);\r\n                //console.log(userData);\r\n                //console.log(\"This is the user id:\")\r\n                //console.log(userId);\r\n                setEmail(userData.email);\r\n            } catch (error) {\r\n                alert('Invalid or expired token \\nYou will be redirected to the Forgot Password page.');\r\n                navigate('/forgot');\r\n            } finally {\r\n                setIsLoading(false);\r\n            }\r\n        };\r\n\r\n        validateToken();\r\n    }, []); // Empty dependency array means this runs once on mount\r\n\r\n\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setMessage(\"Updating password...\");\r\n\r\n        try {\r\n            console.log(\"⚡ Sending request...\");\r\n\r\n            const response = await fetch(\"/api/auth/reset-password\", {\r\n                method: \"POST\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify({userId, password:password, password_rep:password_rep}),\r\n            })\r\n\r\n            console.log(\"Response Status:\", response.status);\r\n\r\n            console.log(\"Response OK:\", response.ok);\r\n            const data = await response.json();\r\n\r\n            if (response.ok) {\r\n                console.log(\"Response Data:\", data); // Log the response body\r\n                setMessage(`✅ Success: ${data.message}`); // Display success message\r\n            } else {\r\n                console.log(\"Response Data:\", data); // Log the response body\r\n                setMessage(`❌ Error: ${data.message || \"Unknown error occurred\"}`); // Handle server error\r\n            }\r\n\r\n        } catch (error) {\r\n            console.error(\"Signup Error:\", error);\r\n            setMessage(`❌ Error: ${error.message}`);\r\n            // Ensure React updates the UI by wrapping setMessage in a useEffect trigger\r\n            setTimeout(() => {\r\n                setMessage(`❌ Error: ${error.message}`);\r\n            }, 0);\r\n            alert(`Error: ${error.message}`);  // Alert popup\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div className={\"outerContainer\"}>\r\n            <Header />\r\n            <div className=\"formComponent\">\r\n                <h3>Reset account password</h3>\r\n                <form onSubmit={handleSubmit} className=\"userForm\">\r\n\r\n                    <input\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        id=\"email\"\r\n                        value={email}\r\n                        placeholder=\"Email\"\r\n                        required\r\n                        readOnly\r\n                        onInput={(e => setEmail(e.target.value))}\r\n                    />\r\n                    <input\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        id=\"password\"\r\n                        value={password}\r\n                        placeholder=\"Password\"\r\n                        required\r\n                        onInput={(e => setPassword(e.target.value))}\r\n                    />\r\n                    <input\r\n                        type=\"password\"\r\n                        name=\"password_rep\"\r\n                        id=\"password_rep\"\r\n                        value={password_rep}\r\n                        placeholder=\"Repeat password\"\r\n                        required\r\n                        onInput={(e => setPasswordRep(e.target.value))}\r\n                    />\r\n\r\n                  <input type=\"submit\" value=\"Reset Password\"/>\r\n                </form>\r\n                {message && <p>{message}</p>} {/* Show the message */}\r\n                <a href=\"/login\">Log in</a>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ResetPassword;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}