{"ast":null,"code":"var _jsxFileName = \"/home/javi/Server/src/components/login/Login.js\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport { useState } from \"react\";\nimport \"../../style/page/userForms.css\";\nimport { useNavigate } from \"react-router-dom\"; // Added to redirect after log in\nimport Header from \"../reusable/Header\";\n\n// Function to login the user\n// NOTE: Code partially generated by AI.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const navigate = useNavigate(); // Create the navigate function\n  const [email, setEmail] = useState(\"\"); // State to hold email input\n  const [password, setPassword] = useState(\"\"); // State to hold password input\n  const [message, setMessage] = useState(\"\"); // State to hold message (success or error)\n\n  const handleSubmit = async e => {\n    e.preventDefault(); // Prevent the default form submission behavior\n    console.log(\"üöÄ handleSubmit triggered!\"); // Check if the form submission is triggered\n    setMessage(\"\"); // Clear any old message before submitting\n    setMessage(\"Logging in...\"); // Show loading message\n\n    // Debugging: Log the email and password to ensure the form is working\n    console.log(\"Login submitted with email:\", email);\n    try {\n      console.log(\"‚ö° Sending request...\");\n\n      // Send POST request to the backend with email and password\n      const response = await fetch(\"/api/auth/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email,\n          password\n        }),\n        // Send user credentials\n        // In order to not get any \"fetch\" errors when loging in, CORS needs extra setting on\n        // the backend to allow it.\n        // SEE on server.js: \"credentials: true\"\n        credentials: \"include\" // VERY important for session handling with cookie!\n      });\n\n      // Parse the response body as JSON\n      const data = await response.json();\n      console.log(\"Response Data:\", data); // Log the response data\n\n      if (!response.ok) {\n        // If the response status is not OK (not 200‚Äì299), throw an error with the message\n        throw new Error(data.message || \"Unknown error occurred\");\n      }\n\n      // If login is successful, show a success message\n      setMessage(`‚úÖ Success: ${data.message}`);\n      // Redirect to the home page after successful login\n      navigate(\"/home\");\n    } catch (error) {\n      console.error(\"‚ùå Login Error:\", error);\n      // Show error message if there is any error during the login process\n      setMessage(`‚ùå Error: ${error.message}`);\n      // Ensure React updates the UI by wrapping setMessage in a useEffect trigger\n      setTimeout(() => {\n        setMessage(`‚ùå Error: ${error.message}`);\n      }, 0);\n      alert(`Error: ${error.message}`); // Alert user\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"outerContainer\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"formComponent\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Login to your account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"userForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          id: \"email\",\n          value: email,\n          placeholder: \"Email\",\n          required: true,\n          onInput: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          id: \"password\",\n          value: password,\n          placeholder: \"Password\",\n          required: true,\n          onInput: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Log In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/signup\",\n        children: \"Don't have an account yet?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/forgot\",\n        children: \"Forgot Password?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n_s(Login, \"zNT8/iYMss+Qn0a5U/hBbWnngHw=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","Header","jsxDEV","_jsxDEV","Login","_s","navigate","email","setEmail","password","setPassword","message","setMessage","handleSubmit","e","preventDefault","console","log","response","fetch","method","headers","body","JSON","stringify","credentials","data","json","ok","Error","error","setTimeout","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","name","id","value","placeholder","required","onInput","target","href","_c","$RefreshReg$"],"sources":["/home/javi/Server/src/components/login/Login.js"],"sourcesContent":["import * as React from 'react';\r\nimport {useState} from \"react\";\r\nimport \"../../style/page/userForms.css\"\r\nimport { useNavigate } from \"react-router-dom\";  // Added to redirect after log in\r\nimport Header   from \"../reusable/Header\";\r\n\r\n// Function to login the user\r\n// NOTE: Code partially generated by AI.\r\n\r\nfunction Login() {\r\n    const navigate = useNavigate();  // Create the navigate function\r\n    const [email, setEmail] = useState(\"\");   // State to hold email input\r\n    const [password, setPassword] = useState(\"\");  // State to hold password input\r\n    const [message, setMessage] = useState(\"\");  // State to hold message (success or error)\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); // Prevent the default form submission behavior\r\n        console.log(\"üöÄ handleSubmit triggered!\"); // Check if the form submission is triggered\r\n        setMessage(\"\"); // Clear any old message before submitting\r\n        setMessage(\"Logging in...\"); // Show loading message\r\n\r\n        // Debugging: Log the email and password to ensure the form is working\r\n        console.log(\"Login submitted with email:\", email);\r\n\r\n        try {\r\n            console.log(\"‚ö° Sending request...\");\r\n\r\n            // Send POST request to the backend with email and password\r\n            const response = await fetch(\"/api/auth/login\", {\r\n                method: \"POST\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify({ email, password }), // Send user credentials\r\n                // In order to not get any \"fetch\" errors when loging in, CORS needs extra setting on\r\n                // the backend to allow it.\r\n                // SEE on server.js: \"credentials: true\"\r\n                credentials: \"include\", // VERY important for session handling with cookie!\r\n            });\r\n\r\n            // Parse the response body as JSON\r\n            const data = await response.json();\r\n            console.log(\"Response Data:\", data); // Log the response data\r\n\r\n            if (!response.ok) {\r\n                // If the response status is not OK (not 200‚Äì299), throw an error with the message\r\n                throw new Error(data.message || \"Unknown error occurred\");\r\n            }\r\n\r\n            // If login is successful, show a success message\r\n            setMessage(`‚úÖ Success: ${data.message}`);\r\n            // Redirect to the home page after successful login\r\n            navigate(\"/home\");\r\n        } catch (error) {\r\n            console.error(\"‚ùå Login Error:\", error);\r\n            // Show error message if there is any error during the login process\r\n            setMessage(`‚ùå Error: ${error.message}`);\r\n            // Ensure React updates the UI by wrapping setMessage in a useEffect trigger\r\n            setTimeout(() => {\r\n                setMessage(`‚ùå Error: ${error.message}`);\r\n            }, 0);\r\n            alert(`Error: ${error.message}`); // Alert user\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={\"outerContainer\"}>\r\n        <Header></Header>\r\n            <div className=\"formComponent\">\r\n                <h3>Login to your account</h3>\r\n                <form onSubmit={handleSubmit} className=\"userForm\">\r\n                    <input\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        id=\"email\"\r\n                        value={email}\r\n                        placeholder=\"Email\"\r\n                        required\r\n                        onInput={(e => setEmail(e.target.value))}/>\r\n\r\n                    <input type=\"password\"\r\n                           name=\"password\"\r\n                           id=\"password\"\r\n                           value={password}\r\n                           placeholder=\"Password\"\r\n                           required\r\n                           onInput={(e => setPassword(e.target.value))}\r\n                    />\r\n                    <input type=\"submit\" value=\"Log In\"/>\r\n                </form>\r\n                <p>{message}</p> {/* Show success or error message */}\r\n                <a href=\"/signup\">Don't have an account yet?</a>\r\n                <a href=\"/forgot\">Forgot Password?</a>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}