import * as React from 'react';
import {useState} from "react";
import "../../style/page/userForms.css"
import { useNavigate } from "react-router-dom";  // Added to redirect after log in
import Header   from "../reusable/Header";

// Function to login the user
// NOTE: Code partially generated by AI.

function Login() {
    const navigate = useNavigate();  // Create the navigate function
    const [email, setEmail] = useState("");   // State to hold email input
    const [password, setPassword] = useState("");  // State to hold password input
    const [message, setMessage] = useState("");  // State to hold message (success or error)

    const handleSubmit = async (e) => {
        e.preventDefault(); // Prevent the default form submission behavior
        console.log("üöÄ handleSubmit triggered!"); // Check if the form submission is triggered
        setMessage(""); // Clear any old message before submitting
        setMessage("Logging in..."); // Show loading message

        // Debugging: Log the email and password to ensure the form is working
        console.log("Login submitted with email:", email);

        try {
            console.log("‚ö° Sending request...");

            // Send POST request to the backend with email and password
            const response = await fetch("/api/auth/login", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ email, password }), // Send user credentials
                // In order to not get any "fetch" errors when loging in, CORS needs extra setting on
                // the backend to allow it.
                // SEE on server.js: "credentials: true"
                credentials: "include", // VERY important for session handling with cookie!
            });

            // Parse the response body as JSON
            const data = await response.json();
            console.log("Response Data:", data); // Log the response data

            if (!response.ok) {
                // If the response status is not OK (not 200‚Äì299), throw an error with the message
                throw new Error(data.message || "Unknown error occurred");
            }

            // If login is successful, show a success message
            setMessage(`‚úÖ Success: ${data.message}`);
            // Redirect to the home page after successful login
            navigate("/home");
        } catch (error) {
            console.error("‚ùå Login Error:", error);
            // Show error message if there is any error during the login process
            setMessage(`‚ùå Error: ${error.message}`);
            // Ensure React updates the UI by wrapping setMessage in a useEffect trigger
            setTimeout(() => {
                setMessage(`‚ùå Error: ${error.message}`);
            }, 0);
            alert(`Error: ${error.message}`); // Alert user
        }
    };

    return (
        <div className={"outerContainer"}>
        <Header></Header>
            <div className="formComponent">
                <h3>Login to your account</h3>
                <form onSubmit={handleSubmit} className="userForm">
                    <input
                        type="email"
                        name="email"
                        id="email"
                        value={email}
                        placeholder="Email"
                        required
                        onInput={(e => setEmail(e.target.value))}/>

                    <input type="password"
                           name="password"
                           id="password"
                           value={password}
                           placeholder="Password"
                           required
                           onInput={(e => setPassword(e.target.value))}
                    />
                    <input type="submit" value="Log In"/>
                </form>
                <p>{message}</p> {/* Show success or error message */}
                <a href="/signup">Don't have an account yet?</a>
                <a href="/forgot">Forgot Password?</a>
            </div>
        </div>
    )
}

export default Login;